pipeline
{
    agent any
    stages
    {
        stage('ContinuousDownload') # continuous download of cope happens by triggering with webhooks
        {
            steps
            {
                script
                {
                   try
                   {
                       git 'https://github.com/xxxxxx/xxxxxx' #project repo url
                   }
                   catch(Exception e1)
                   {
                       mail bcc: '', body: 'Jenkins is unable to download from remote github', cc: '', from: '', replyTo: '', subject: 'Download failed', to: 'gitadmin@outlook.com'
                       exit(1)
                   }
                }
               
            }
        }
        stage('execute sonarqube reports') # execution of sonar qube reports happens
        {
            steps
            {
                script 
                {
                                    
                    try
                    {
                        sh label: '', script: 'mvn sonar'    # enabled sonarqube quality gate reports
                    }
                    catch(Exception e4)
                    {
                       mail bcc: '', body: 'exuction of sonarqube reports failed', cc: '', from: '', replyTo: '', subject: 'Testing failed', to: 'developers@outlook.com'
                       exit(1)
                    }
                }
            }
        }
         stage('ContinuousBuild') # in maven life cycle build stage triggers
        {
            steps
            {
                script
                {
                   try
                   {
                       sh label: '', script: 'mvn package' # maven goals
                   }
                   catch(Exception e2)
                   {
                       mail bcc: '', body: 'Jenkins is unable to create an artifact from the code', cc: '', from: '', replyTo: '', subject: 'Build failed', to: 'developers@outlook.com'
                      exit(1)
                   }
                }
               
            }
        }
       stage('build images and push into docker registry') # private docker registry
        {
            steps
            {
                script
                {
                                    
                    try
                    {
                        sh label: '', script: 'docker build -t < docker_imagename>'    # building docker images 
                        sh label: '', script: 'docker push -u <user_name> -p <password>'   # pushing to docker registry
                    }
                    catch(Exception e4)
                    {
                       mail bcc: '', body: 'creating and pushing of image has failed', cc: '', from: '', replyTo: '', subject: 'Testing failed', to: 'midware@outlook.com'
                       exit(1)
                    }
                }
                
            }
        }
        stage('ContinuousDeployment') # deploying the images into tomcat servers for testing
        {
            steps
            {
                script
                {
                   try
                   {
                      sh label: '', script: 'scp <builded artifact/tomcat> ubuntu@172.x.x.x:/var/lib/tomcat8/webapps/testwebapp.war'
                   }
                   catch(Exception e3)
                   {
                       mail bcc: '', body: 'Jenkins is unable to deploy into tomcat on the QaServers', cc: '', from: '', replyTo: '', subject: 'Deployment failed', to: 'middleware@outlook.com'
                       exit(1)
                   }
                }
                
            }
        }
        stage('ContinuousTesting') # continuous testing of builded artifact happens
        {
            steps
            {
                script
                {
                                    
                    try
                    {
                        git 'https://github.com/xxxxxx/testing_scripts'
                       sh label: '', script: 'java -jar /home/ubuntu/.jenkins/workspace/DeclarativePipeline/testing.jar'
                    }
                    catch(Exception e4)
                    {
                       mail bcc: '', body: 'Functional testing of the app on QAServers failed', cc: '', from: '', replyTo: '', subject: 'Testing failed', to: 'testers@outlook.com'
                       exit(1)
                    }
                }
                
            }
        }
        stage('ContinuousDelivery') # iff all the phases happens fine deploying into production servers happens
        {
            steps
            {
                script
                {
                   try
                   { 
                        input message: 'Waiting for Approval!', submitter: 'naresh'
                        sh label: '', script: 'scp <buildedimade/artifact> ubuntu@172.x.x.x:/var/lib/tomcat8/webapps/prodwebapp.war' 
                    }
                    catch(Exception e5)
                    {
                         mail bcc: '', body: 'Unable to deploy into ProdServers', cc: '', from: '', replyTo: '', subject: 'Delivery failed', to: 'delevery@outlook.com'
                    }
                }
            }
        }
       
    }
  
       
            
    
 
    
    
    
}
